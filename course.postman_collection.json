{
	"info": {
		"_postman_id": "921c0ed0-1696-4594-8656-ada0e2f41eaf",
		"name": "course",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "get httpbin",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://httpbin.org/get?myparameter=1&myparameter2=whatever&myparameter3=45",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"get"
					],
					"query": [
						{
							"key": "myparameter",
							"value": "1"
						},
						{
							"key": "myparameter2",
							"value": "whatever"
						},
						{
							"key": "myparameter3",
							"value": "45"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get uuid",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"let response = pm.response.json();",
							"pm.globals.set(\"uuid\", response.uuid);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://httpbin.org/uuid",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"uuid"
					]
				}
			},
			"response": []
		},
		{
			"name": "post request",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"John\",\n    \"email\":\"john@example.com\",\n    \"id\":\"{{uuid}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://httpbin.org/post",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "post request test",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\":\"John\",\n    \"email\":\"john@example.com\",\n    \"id\":\"{{uuid}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://httpbin.org/post",
					"protocol": "https",
					"host": [
						"httpbin",
						"org"
					],
					"path": [
						"post"
					]
				}
			},
			"response": []
		},
		{
			"name": "Tello create board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Board should be created\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"My new board\");",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"Board should be private\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/?name=My new board&key=f3d2e1bfe7ef1743068a2168743bd045&token=e28895e5e7174cd6bdbdbde6c2caa1d521f5f18851293a9629ea7deedfcb95ac&defaultLists=false",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "My new board"
						},
						{
							"key": "key",
							"value": "f3d2e1bfe7ef1743068a2168743bd045"
						},
						{
							"key": "token",
							"value": "e28895e5e7174cd6bdbdbde6c2caa1d521f5f18851293a9629ea7deedfcb95ac"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Tello create board Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Board should be created\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"My new board\");",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"Board should be private\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.prefs.permissionLevel).to.eql(\"private\");",
							"});",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/:id?name=My new board&closed=true",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "name",
							"value": "My new board"
						},
						{
							"key": "closed",
							"value": "true"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "1234"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Tello create board Copy 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"const response = pm.response.json();",
							"",
							"pm.test(\"Board should be created\", function () {",
							"    pm.expect(response.name).to.eql(\"My new board\");",
							"    pm.expect(response.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"Board should be private\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(response.prefs.permissionLevel).to.eql(\"private\");",
							"});",
							"",
							"pm.globals.set(\"boardId\", response.id);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/boards/?name=My new board&key={{trellokey}}&token={{trellotoken}}&defaultLists=false",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "My new board"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						},
						{
							"key": "defaultLists",
							"value": "false"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Tello create list Copy 3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"List should be created\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"TODO\");",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"List was created inside the board\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.idBoard).to.eql(pm.globals.get(\"boardId\"));",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists/?name=TODO&idBoard={{boardId}}&key={{trellokey}}&token={{trellotoken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Tello create board Copy 4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"List should be created\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.name).to.eql(\"TODO\");",
							"    pm.expect(jsonData.closed).to.eql(false);",
							"});",
							"",
							"pm.test(\"List was created inside the board\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.idBoard).to.eql(pm.globals.get(\"boardId\"));",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "https://api.trello.com/1/lists/?name=TODO&idBoard={{boardId}}&key={{trellokey}}&token={{trellotoken}}",
					"protocol": "https",
					"host": [
						"api",
						"trello",
						"com"
					],
					"path": [
						"1",
						"lists",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						},
						{
							"key": "key",
							"value": "{{trellokey}}"
						},
						{
							"key": "token",
							"value": "{{trellotoken}}"
						}
					]
				}
			},
			"response": []
		}
	]
}